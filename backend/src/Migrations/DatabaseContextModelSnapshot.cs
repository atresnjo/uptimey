// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using uptimey;

namespace uptimey.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.6.21352.1")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("uptimey.Entities.SiteReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateChecked")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<bool>("HasError")
                        .HasColumnType("boolean");

                    b.Property<double>("ResponseTime")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UserSiteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserSiteId");

                    b.ToTable("SiteReports");
                });

            modelBuilder.Entity("uptimey.Entities.UserSite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("UserSites");
                });

            modelBuilder.Entity("uptimey.Entities.SiteReport", b =>
                {
                    b.HasOne("uptimey.Entities.UserSite", "UserSite")
                        .WithMany("Reports")
                        .HasForeignKey("UserSiteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("UserSite");
                });

            modelBuilder.Entity("uptimey.Entities.UserSite", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
